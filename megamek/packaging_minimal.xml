<?xml version="1.0"?>
<!-- Author: Jay Lawson -->
<!-- This is my attempt at developing a new build file for MegaMek        -->
<!-- The goals of this new build file are as follows                      -->
<!-- 1) Produce four packages with each release                           -->
<!--     a) An OS X bundled release using jarbundler                      -->
<!--     b) A Windows release with the EXE file                           -->
<!--     c) A linux release with the startup.sh file                      -->
<!--     d) A source-file only release to comply with GPL                 -->
<!-- 2) Reduce the amount of folders and files in each release to make it -->
<!--    more intuitive for the user                                       -->

<project default="release" name="MegaMek" basedir=".">

	<!-- Global properties for this build -->

	<property name="srcdir" value="src" />
	<property name="propdir" value="i18n" />
	<property name="confdir" value="mmconf" />
	<property name="logdir" value="logs" />
	<property name="builddir" value="classes" />
	<property name="libdir" value="lib" />
	<property name="datadir" value="data" />
	<property name="apidocsdir" value="apidocs" />
	<property name="docdir" value="docs" />
	<property name="localdir" value="localdev" />
	<property name="util" value="packaging_utils" />

	<!-- Version and packaging properties -->
	<property name="project.name" value="megamek" />

	<!-- same as builddir but under local -->
	<property name="localbuilddir" value="${localdir}/${builddir}" />

	<property name="timestampfile" value="${logdir}/timestamp" />
	<property name="TinyXMLsrc" value="TinyXML07-src.zip" />

	<!-- Name of the target jarfile and the class containing the main-Method -->
	<property name="jarfile" value="MegaMek.jar" />
	<property name="jarmainclass" value="megamek.MegaMek" />

	<!-- This is the relative path to the 'data' directory -->
	<property name="dataclasspath" value="." />

	<!-- Build the list of the lib/*.jar files to be included in the "Class-Path" attribute of the jar's manifest dynamically.  -->
	<pathconvert pathsep=" " property="jarclasspath">
		<path>
			<!-- We'll include the jars in the "lib" directory -->
			<fileset dir="lib/">
				<include name="*.jar" />
			</fileset>
		</path>
		<mapper>
			<chainedmapper>
				<flattenmapper />
				<globmapper from="*" to="lib/*" />
			</chainedmapper>
		</mapper>
	</pathconvert>

	<condition property="isOsWindows">
		<os family="windows" />
	</condition>

	<taskdef name="jarbundler" classname="net.sourceforge.jarbundler.JarBundler" classpath="${util}/jarbundler-2.1.0.jar"/>

    <!-- if we're using Windows then we use the launch4j for Windows -->
    <target name="checkOSWindows" if="isOsWindows">
            <taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${util}/launch4j/launch4j.jar:${util}/launch4j/lib/xstream.jar" />
    </target>

    <target name="localdev-init" depends="checkOSWindows">
		<tstamp />
		<delete dir="${localdir}" />
		<input message="Please enter version number (eg. 0.34.0):" addproperty="version"/>
		<property name="windist" value="${project.name}-${version}-windows" />
	</target>

	<!-- following localdev-* tasks get, build & package the current version from local sources -->
	<target name="localdev-get" depends="localdev-init" description="get the local source">
		<copy todir="${localdir}" >
			<fileset dir="${basedir}">
				<exclude name="${localdir}" />
			</fileset>
		</copy>
	</target>

	<target name="localdev-build" depends="localdev-get" description="compile project from local source and generate JAR file" >
		<mkdir dir="${localbuilddir}" />

		<!-- compile -->
		<echo message="building MegaMek from local sources" />
		<javac debug="true" debuglevel="lines,source" target="1.7" source="1.7" destdir="${localbuilddir}" srcdir="${localdir}/${srcdir}" memoryInitialSize="512m" memoryMaximumSize="512m" fork="true">
			<classpath>
				<pathelement location="${localdir}" />
				<fileset dir="${localdir}/${libdir}" includes="*.jar" />
			</classpath>
		</javac>

		<!-- jar -->
		<jar basedir="${localbuilddir}" jarfile="${localdir}/${jarfile}">
			<fileset dir="${localdir}/${propdir}" includes="**/*.properties" />
			<fileset dir="${localdir}/${srcdir}" includes="**/*.properties" />
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Class-Path" value=". ${jarclasspath}" />
				<attribute name="Main-Class" value="${jarmainclass}" />
			</manifest>
		</jar>
		<!-- generate current equipment.txt -->
		<java jar="${localdir}/MegaMek.jar" fork="true">
			<arg line="-eqdb docs/equipment.txt" />
			<classpath>
				<pathelement path="${localdir}" />
				<fileset dir="${localdir}/${libdir}" includes="*.jar" />
			</classpath>
		</java>
		<copy todir="${localdir}/docs" overwrite="true">
			<fileset dir="${docdir}" includes="equipment.txt" />
		</copy>

		<!-- Ensure that the log directory exists. -->
		<mkdir dir="${localdir}/${logdir}" />
		<touch file="${localdir}/${timestampfile}" />

	</target>
	
	<target name="localdev-clean" description="remove the local build directory">
	    <delete dir="${localbuilddir}" />
	    <delete dir="${localdir}" />
	</target>

	<!-- Produce an EXE file -->
	<target name="exe" description="Generate an EXE wrapper for MegaMek.jar">
		<delete file="${localdir}/MegaMek.exe"/>
		<launch4j configFile="${util}/megamek.4j_local.xml" />
	</target>

	<target name="win-bundle" depends="exe" description="Bundle the project built from local sources into a Windows distribution">
		<mkdir dir="${windist}" />
		<copy todir="${windist}">
			<fileset dir="${localdir}" >
				<include name="${libdir}/" />
				<include name="${logdir}/" />
				<include name="${datadir}/" />
				<include name="${confdir}/" />
				<include name="${docdir}/" />
				<include name="readme*.txt" />
				<include name="license.txt" />
				<include name="MegaMek.exe" />
				<exclude name="**/*.psd"/>
			</fileset>
		</copy>
		<copy file="${util}/megamek.l4j.ini" todir="${windist}"/>
        <copy file="${localdir}/MegaMek.jar" todir="${windist}/lib/" />
	</target>

	<target name="unitfiles-zip" description="Create a zipfile of the Mech datafiles">
		<zip zipfile="${localdir}/${datadir}/mechfiles/battlearmor.zip" basedir="${localdir}/${datadir}/mechfiles/battlearmor"/>
		<zip zipfile="${localdir}/${datadir}/mechfiles/convfighter.zip" basedir="${localdir}/${datadir}/mechfiles/convfighter"/>
		<zip zipfile="${localdir}/${datadir}/mechfiles/dropships.zip" basedir="${localdir}/${datadir}/mechfiles/dropships"/>
		<zip zipfile="${localdir}/${datadir}/mechfiles/fighters.zip" basedir="${localdir}/${datadir}/mechfiles/fighters"/>
		<zip zipfile="${localdir}/${datadir}/mechfiles/ge.zip" basedir="${localdir}/${datadir}/mechfiles/ge"/>
		<zip zipfile="${localdir}/${datadir}/mechfiles/infantry.zip" basedir="${localdir}/${datadir}/mechfiles/infantry"/>
		<zip zipfile="${localdir}/${datadir}/mechfiles/jumpships.zip" basedir="${localdir}/${datadir}/mechfiles/jumpships"/>
		<zip zipfile="${localdir}/${datadir}/mechfiles/mechs.zip" basedir="${localdir}/${datadir}/mechfiles/mechs"/>
		<zip zipfile="${localdir}/${datadir}/mechfiles/protomechs.zip" basedir="${localdir}/${datadir}/mechfiles/protomechs"/>
		<zip zipfile="${localdir}/${datadir}/mechfiles/smallcraft.zip" basedir="${localdir}/${datadir}/mechfiles/smallcraft"/>
		<zip zipfile="${localdir}/${datadir}/mechfiles/spacestation.zip" basedir="${localdir}/${datadir}/mechfiles/spacestation"/>
		<zip zipfile="${localdir}/${datadir}/mechfiles/unofficial.zip" basedir="${localdir}/${datadir}/mechfiles/unofficial"/>
		<zip zipfile="${localdir}/${datadir}/mechfiles/vehicles.zip" basedir="${localdir}/${datadir}/mechfiles/vehicles"/>
		<zip zipfile="${localdir}/${datadir}/mechfiles/warship.zip" basedir="${localdir}/${datadir}/mechfiles/warship"/>
		<delete dir="${localdir}/${datadir}/mechfiles/battlearmor"/>
		<delete dir="${localdir}/${datadir}/mechfiles/convfighter"/>
		<delete dir="${localdir}/${datadir}/mechfiles/dropships"/>
		<delete dir="${localdir}/${datadir}/mechfiles/fighters"/>
		<delete dir="${localdir}/${datadir}/mechfiles/ge"/>
		<delete dir="${localdir}/${datadir}/mechfiles/infantry"/>
		<delete dir="${localdir}/${datadir}/mechfiles/jumpships"/>
		<delete dir="${localdir}/${datadir}/mechfiles/mechs"/>
		<delete dir="${localdir}/${datadir}/mechfiles/protomechs"/>
		<delete dir="${localdir}/${datadir}/mechfiles/smallcraft"/>
		<delete dir="${localdir}/${datadir}/mechfiles/spacestation"/>
		<delete dir="${localdir}/${datadir}/mechfiles/unofficial"/>
		<delete dir="${localdir}/${datadir}/mechfiles/vehicles"/>
		<delete dir="${localdir}/${datadir}/mechfiles/warship"/>
    </target>

	<target name="win-zip" description="Create a zipfile of the Windows distribution">
		<zip zipfile="${basedir}/${windist}.zip" basedir="${windist}"  />
	</target>

	<target name="win-clean">
		<delete dir="${windist}" />
	</target>

	<target name="release" depends="localdev-build, unitfiles-zip, win-package, localdev-clean" description="Build the project from local sources and package it as Windows, Mac, Unix, and source-only" />
	
	<target name="win-package" depends="win-bundle, win-zip, win-clean" description="Package a Windows distribution of the project built from local sources"/>

    <target name="win-release" depends="localdev-build, win-package, localdev-clean" description="Build the project from local source and package it as Windows" />

</project>
